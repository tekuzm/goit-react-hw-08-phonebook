{"version":3,"file":"static/js/665.a7ddbcc4.chunk.js","mappings":"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","sources":["components/modules/ContactEditor/ContactEditor.styled.jsx","components/modules/ContactEditor/ContactEditor.jsx","redux/contacts/selectors.js","components/modules/ContactItem/ContactItem.styled.jsx","components/modules/ContactItem/ContactItem.jsx","components/modules/ContactList/ContactList.styled.jsx","components/modules/ContactList/ContactList.jsx","redux/filter/selectors.js","components/modules/Filter/Filter.styled.jsx","components/modules/Filter/Filter.jsx","components/modules/Contacts/Contacts.jsx","components/modules/PhoneBook.jsx/PhoneBook.styled.jsx","components/modules/PhoneBook.jsx/PhoneBook.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  border-style: groove;\n  padding: 25px;\n`;\n\nconst Input = styled.input`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  font-size: large;\n  margin: 0.5rem auto;\n  padding: 0.5rem 15rem 0.5rem 0.5rem;\n  text-align: left;\n`;\n\nconst AddBtn = styled.button`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 10px 14px;\n  font-size: 20px;\n\n  border-radius: 6px;\n  border: none;\n\n  color: #fff;\n  background: linear-gradient(180deg, #4b91f7 0%, #367af6 100%);\n  background-origin: border-box;\n  box-shadow: 0px 0.5px 1.5px rgba(54, 122, 246, 0.25),\n    inset 0px 0.8px 0px -0.25px rgba(255, 255, 255, 0.2);\n  touch-action: manipulation;\n\n  &:hover,\n  &:focus {\n    box-shadow: inset 0px 0.8px 0px -0.25px rgba(255, 255, 255, 0.2),\n      0px 0.5px 1.5px rgba(54, 122, 246, 0.25),\n      0px 0px 0px 3.5px rgba(58, 108, 217, 0.5);\n    outline: 0;\n  }\n`;\n\nexport { Form, Input, AddBtn };\n","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { addContact, fetchContacts } from 'redux/contacts/operations';\n\n// ========== styles ===========\n\nimport { Form, Input, AddBtn } from './ContactEditor.styled';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const [state, setState] = useState({ name: '', number: '' });\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  // Handle form submit\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (loading) {\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      await dispatch(\n        addContact({\n          name,\n          number,\n          onSuccess: () => {\n            setState({ name: '', number: '' });\n          },\n        })\n      );\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n\n    // dispatch(addContact({ name, number }))\n    //   .then(({ error }) => {\n    //     if (!error) {\n    //       setState({ name: '', number: '' });\n    //     }\n    //   })\n    //   .catch(error => console.log(error));\n\n    return true;\n  };\n\n  // Handle input change\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const { name, number } = state;\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <label>Name</label>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={handleChange}\n        placeholder=\"Enter name\"\n      />\n      <label>Number</label>\n      <Input\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={handleChange}\n        placeholder=\"Enter phone number\"\n      />\n\n      <AddBtn type=\"submit\">{loading ? 'Loading...' : 'Add contact'}</AddBtn>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","export const getContacts = state => state.contacts;\n\nexport const getFilteredContacts = ({ filter, contacts }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n\n  const normalizedFilter = filter.toLowerCase();\n  const result = contacts.items.filter(({ name }) => {\n    return name.toLowerCase().includes(normalizedFilter);\n  });\n  return result;\n};\n","import styled from 'styled-components';\n\nconst Item = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  margin-bottom: 15px;\n`;\n\nconst Bullet = styled.span`\n  display: inline-block;\n  vertical-align: middle;\n  background-size: 100%;\n  height: 10px;\n  width: 10px;\n  margin-right: 5px;\n  background-color: black;\n  border-radius: 25px;\n`;\n\nconst DeleteBtn = styled.button`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 5px 14px;\n  font-size: 20px;\n\n  border-radius: 6px;\n  border: none;\n\n  color: #fff;\n  background: linear-gradient(180deg, #4b91f7 0%, #367af6 100%);\n  background-origin: border-box;\n  box-shadow: 0px 0.5px 1.5px rgba(54, 122, 246, 0.25),\n    inset 0px 0.8px 0px -0.25px rgba(255, 255, 255, 0.2);\n  touch-action: manipulation;\n\n  &:hover,\n  &:focus {\n    box-shadow: inset 0px 0.8px 0px -0.25px rgba(255, 255, 255, 0.2),\n      0px 0.5px 1.5px rgba(54, 122, 246, 0.25),\n      0px 0px 0px 3.5px rgba(58, 108, 217, 0.5);\n    outline: 0;\n  }\n`;\n\nexport { Item, Bullet, DeleteBtn };\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\n// ========== styles ==========\n\nimport { Item, Bullet, DeleteBtn } from './ContactItem.styled';\n\nconst ContactItem = ({ id, name, phone, deleteItem }) => {\n  const [loading, setLoading] = useState(false);\n\n  const handleDelete = async () => {\n    setLoading(true);\n    await deleteItem(id);\n    setLoading(false);\n  };\n\n  return (\n    <Item>\n      <Bullet></Bullet>\n      {name}: {phone}\n      <DeleteBtn onClick={handleDelete} type=\"button\" disabled={loading}>\n        {loading ? 'Loading...' : 'Delete'}\n      </DeleteBtn>\n    </Item>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  deleteItem: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nconst List = styled.ul`\n  margin: 0;\n  margin-top: 25px;\n  padding-left: 15px;\n`;\n\nexport { List };\n","import PropTypes from 'prop-types';\n\n// ========== components ==========\n\nimport ContactItem from 'components/modules/ContactItem/ContactItem';\n\n// ========== styles ==========\n\nimport { List } from './ContactList.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nconst ContactList = ({ contacts }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = async id => {\n    await dispatch(deleteContact(id));\n  };\n\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItem\n          key={id}\n          id={id}\n          name={name}\n          phone={number}\n          deleteItem={handleDeleteContact}\n        />\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n\nContactList.defaultProps = {\n  contacts: [],\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","export const getFilter = state => state.filter;\n","import styled from 'styled-components';\n\nconst FilterWrap = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst FilterInput = styled.input`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  font-size: large;\n  margin: 0.5rem auto;\n  padding: 0.5rem 5rem 0.5rem 0.5rem;\n  text-align: left;\n`;\n\nexport { FilterWrap, FilterInput };\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { getFilter } from 'redux/filter/selectors';\nimport { setFilter } from 'redux/filter/slice';\n\n// ========== styles ==========\n\nimport { FilterWrap, FilterInput } from './Filter.styled';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  // Handle filter input change\n  const handleFilter = ({ target }) => dispatch(setFilter(target.value));\n\n  // Return layout\n  return (\n    <FilterWrap>\n      <label>Find contacts by name</label>\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        onChange={handleFilter}\n        value={filter}\n      />\n    </FilterWrap>\n  );\n};\n\nexport default Filter;\n","import { useSelector } from 'react-redux';\nimport { getFilteredContacts } from 'redux/contacts/selectors';\n\n// ========== components ==========\n\nimport ContactList from 'components/modules/ContactList/ContactList';\nimport Filter from 'components/modules/Filter/Filter';\n\nconst Contacts = () => {\n  const contacts = useSelector(getFilteredContacts);\n\n  return (\n    <>\n      <Filter />\n      {contacts.length ? (\n        <ContactList contacts={contacts} />\n      ) : (\n        <p>No contacts in the list. Please add one!</p>\n      )}\n    </>\n  );\n};\n\nexport default Contacts;\n","import styled from 'styled-components';\n\nconst PhoneBookStyles = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-size: 20px;\n`;\n\nexport { PhoneBookStyles };\n","// ========== components ==========\n\nimport ContactForm from '../ContactEditor/ContactEditor';\nimport Contacts from '../Contacts/Contacts';\n\n// ========== styles ==========\n\nimport { PhoneBookStyles } from './PhoneBook.styled';\n\nconst PhoneBook = () => {\n  return (\n    <PhoneBookStyles>\n      <ContactForm />\n      <Contacts />\n    </PhoneBookStyles>\n  );\n};\n\nexport default PhoneBook;\n","import PhoneBook from 'components/modules/PhoneBook.jsx/PhoneBook';\n\nconst ContactsPage = () => <PhoneBook />;\n\nexport default ContactsPage;\n"],"names":["Form","styled","Input","AddBtn","dispatch","useDispatch","useState","name","number","state","setState","loading","setLoading","useEffect","fetchContacts","handleSubmit","e","preventDefault","addContact","onSuccess","console","log","handleChange","target","value","prevState","onSubmit","type","pattern","title","required","onChange","placeholder","getFilteredContacts","filter","contacts","items","normalizedFilter","toLowerCase","includes","Item","Bullet","DeleteBtn","id","phone","deleteItem","handleDelete","onClick","disabled","List","ContactList","handleDeleteContact","deleteContact","map","defaultProps","getFilter","FilterWrap","FilterInput","useSelector","setFilter","length","PhoneBookStyles"],"sourceRoot":""}