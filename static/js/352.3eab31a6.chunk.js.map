{"version":3,"file":"static/js/352.3eab31a6.chunk.js","mappings":"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","sources":["webpack://phonebook-app/./src/components/modules/ContactEditor/ContactEditor.module.css?dbde","components/modules/ContactEditor/ContactEditor.jsx","redux/contacts/selectors.js","webpack://phonebook-app/./src/components/modules/ContactItem/ContactItem.module.css?80d2","components/modules/ContactItem/ContactItem.jsx","webpack://phonebook-app/./src/components/modules/ContactList/ContactList.module.css?9d73","components/modules/ContactList/ContactList.jsx","redux/filter/selectors.js","components/modules/SearchBtn/SearchBtn.jsx","webpack://phonebook-app/./src/components/modules/Filter/Filter.module.css?02c5","components/modules/Filter/Filter.jsx","webpack://phonebook-app/./src/components/modules/Contacts/Contacts.module.css?db41","components/modules/Contacts/Contacts.jsx","webpack://phonebook-app/./src/components/modules/PhoneBook.jsx/PhoneBook.module.css?b88f","components/modules/PhoneBook.jsx/PhoneBook.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactEditForm\":\"ContactEditor_contactEditForm__ARQ8j\"};","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { addContact, fetchContacts } from 'redux/contacts/operations';\n\n// ========== styles ===========\n\nimport {\n  Input,\n  InputLeftElement,\n  Button,\n  Icon,\n  InputGroup,\n} from '@chakra-ui/react';\nimport { TbUserCircle } from 'react-icons/tb';\nimport { AiOutlinePhone } from 'react-icons/ai';\n\nimport css from './ContactEditor.module.css';\n\nconst ContactEditor = () => {\n  const dispatch = useDispatch();\n\n  const [state, setState] = useState({ name: '', number: '' });\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  // Handle form submit\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (loading) {\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      await dispatch(\n        addContact({\n          name,\n          number,\n          onSuccess: () => {\n            setState({ name: '', number: '' });\n          },\n        })\n      );\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n\n    // dispatch(addContact({ name, number }))\n    //   .then(({ error }) => {\n    //     if (!error) {\n    //       setState({ name: '', number: '' });\n    //     }\n    //   })\n    //   .catch(error => console.log(error));\n\n    return true;\n  };\n\n  // Handle input change\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const { name, number } = state;\n\n  return (\n    <form className={css.contactEditForm} onSubmit={handleSubmit}>\n      <InputGroup>\n        <InputLeftElement\n          pointerEvents=\"none\"\n          children={<Icon as={TbUserCircle} boxSize={6} />}\n        />\n        <Input\n          size=\"md\"\n          variant=\"outline\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          focusBorderColor=\"teal.500\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n          placeholder=\"Enter name\"\n        />\n      </InputGroup>\n\n      <InputGroup>\n        <InputLeftElement\n          pointerEvents=\"none\"\n          children={<Icon as={AiOutlinePhone} boxSize={6} />}\n        />\n        <Input\n          size=\"md\"\n          variant=\"outline\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          focusBorderColor=\"teal.500\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n          placeholder=\"Enter phone number\"\n        />\n      </InputGroup>\n\n      <Button isLoading={loading} colorScheme=\"teal\" size=\"md\" type=\"submit\">\n        Add contact\n      </Button>\n    </form>\n  );\n};\n\nexport default ContactEditor;\n","export const getContacts = state => state.contacts;\n\nexport const getFilteredContacts = ({ filter, contacts }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n\n  const normalizedFilter = filter.toLowerCase();\n  const result = contacts.items.filter(({ name }) => {\n    return name.toLowerCase().includes(normalizedFilter);\n  });\n  return result;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactItem\":\"ContactItem_contactItem__C4ob2\",\"contactItemBullet\":\"ContactItem_contactItemBullet__UeAp0\"};","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\n// ========== styles ==========\n\nimport { Button } from '@chakra-ui/react';\n\nimport css from './ContactItem.module.css';\n\nconst ContactItem = ({ id, name, phone, deleteItem }) => {\n  const [loading, setLoading] = useState(false);\n\n  const handleDelete = async () => {\n    setLoading(true);\n    await deleteItem(id);\n    setLoading(false);\n  };\n\n  return (\n    <li className={css.contactItem}>\n      <span className={css.contactItemBullet}></span>\n      {name}: {phone}\n      <Button\n        isLoading={loading}\n        colorScheme=\"teal\"\n        size=\"md\"\n        onClick={handleDelete}\n        type=\"button\"\n        disabled={loading}\n      >\n        Delete\n      </Button>\n    </li>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  deleteItem: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__gnqlx\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\nimport { deleteContact } from 'redux/contacts/operations';\n\n// ========== components ==========\n\nimport ContactItem from 'components/modules/ContactItem/ContactItem';\n\n// ========== styles ==========\n\nimport css from './ContactList.module.css';\n\nconst ContactList = ({ contacts }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = async id => {\n    await dispatch(deleteContact(id));\n  };\n\n  return (\n    <ul className={css.contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItem\n          key={id}\n          id={id}\n          name={name}\n          phone={number}\n          deleteItem={handleDeleteContact}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n\nContactList.defaultProps = {\n  contacts: [],\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","export const getFilter = state => state.filter;\n","import { CiSearch } from 'react-icons/ci';\n\nconst SearchBtn = () => <CiSearch />;\n\nexport default SearchBtn;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterWrap\":\"Filter_filterWrap__hnD7P\"};","import { useDispatch, useSelector } from 'react-redux';\n\nimport { getFilter } from 'redux/filter/selectors';\nimport { setFilter } from 'redux/filter/slice';\n\n// ========== components ==========\n\nimport SearchBtn from '../SearchBtn/SearchBtn';\n\n// ========== styles ==========\n\nimport { Input } from '@chakra-ui/react';\nimport { IconButton } from '@chakra-ui/react';\n\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  // Handle filter input change\n  const handleFilter = ({ target }) => dispatch(setFilter(target.value));\n\n  // Return layout\n  return (\n    <div className={css.filterWrap}>\n      <Input\n        size=\"md\"\n        variant=\"outline\"\n        type=\"text\"\n        name=\"filter\"\n        focusBorderColor=\"teal.500\"\n        placeholder=\"Find contacts by name\"\n        onChange={handleFilter}\n        value={filter}\n      />\n      <IconButton aria-label=\"Search database\" icon={<SearchBtn />} />\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsWrap\":\"Contacts_contactsWrap__oQyeq\"};","import { useSelector } from 'react-redux';\nimport { getFilteredContacts } from 'redux/contacts/selectors';\n\n// ========== components ==========\n\nimport ContactList from 'components/modules/ContactList/ContactList';\nimport Filter from 'components/modules/Filter/Filter';\n\n// ========== styles ==========\n\nimport css from './Contacts.module.css';\n\nconst Contacts = () => {\n  const contacts = useSelector(getFilteredContacts);\n\n  return (\n    <div className={css.contactsWrap}>\n      <Filter />\n      {contacts.length ? (\n        <ContactList contacts={contacts} />\n      ) : (\n        <p>No contacts in the list. Please add one!</p>\n      )}\n    </div>\n  );\n};\n\nexport default Contacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebookWrap\":\"PhoneBook_phonebookWrap__onEyI\"};","// ========== components ==========\n\nimport ContactEditor from '../ContactEditor/ContactEditor';\nimport Contacts from '../Contacts/Contacts';\n\n// ========== styles ==========\n\nimport css from './PhoneBook.module.css';\n\nconst PhoneBook = () => {\n  return (\n    <div className={css.phonebookWrap}>\n      <ContactEditor />\n      <Contacts />\n    </div>\n  );\n};\n\nexport default PhoneBook;\n","// ========== components ==========\n\nimport PhoneBook from 'components/modules/PhoneBook.jsx/PhoneBook';\n\nconst ContactsPage = () => <PhoneBook />;\n\nexport default ContactsPage;\n"],"names":["dispatch","useDispatch","useState","name","number","state","setState","loading","setLoading","useEffect","fetchContacts","handleSubmit","e","preventDefault","addContact","onSuccess","console","log","handleChange","target","value","prevState","className","css","onSubmit","pointerEvents","children","as","TbUserCircle","boxSize","I","size","variant","type","focusBorderColor","pattern","title","required","onChange","placeholder","AiOutlinePhone","isLoading","colorScheme","getFilteredContacts","filter","contacts","items","normalizedFilter","toLowerCase","includes","id","phone","deleteItem","handleDelete","onClick","disabled","ContactList","handleDeleteContact","deleteContact","map","defaultProps","getFilter","useSelector","setFilter","icon","length"],"sourceRoot":""}